/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;


import controller.GrupoJpaController;
import controller.HistorialJpaController;
import controller.MiembroJpaController;
import controller.UsuarioJpaController;
import entities.Grupo;
import entities.Historial;
import entities.Miembro;
import entities.Usuario;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigInteger;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Objects;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author johan
 */
public class CrearGrupo extends javax.swing.JFrame {

	private String[] nombresContacts={
			"Nombre","Email"
			};
        private Object[][] matriz;
        
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("finalPU");
        UsuarioJpaController controlador = new UsuarioJpaController(emf);
        /**
     * Creates new form CrearGrupo
     */
    public CrearGrupo( String user ) {
        
        initComponents();
        this.crearTablaInfo(user);
        other(user);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Administrar grupos");

        jTextField1.setText("Ingrese nombre");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Email"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Listo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jButton1)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//    //    /* Set the Nimbus look and feel */
//    //    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//    //    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//    //     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//    //     */
//    //    try {
//    //    //    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//    //    //    //    if ("Nimbus".equals(info.getName())) {
//    //    //    //    //    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//    //    //    //    //    break;
//    //    //    //    }
//    //    //    }
//    //    } catch (ClassNotFoundException ex) {
//    //    //    java.util.logging.Logger.getLogger(CrearGrupo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//    //    } catch (InstantiationException ex) {
//    //    //    java.util.logging.Logger.getLogger(CrearGrupo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//    //    } catch (IllegalAccessException ex) {
//    //    //    java.util.logging.Logger.getLogger(CrearGrupo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//    //    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//    //    //    java.util.logging.Logger.getLogger(CrearGrupo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//    //    }
//    //    //</editor-fold>

//    //    /* Create and display the form */
//    //    java.awt.EventQueue.invokeLater(new Runnable() {
//    //    //    public void run() {
//    //    //    //    new CrearGrupo().setVisible(true);
//    //    //    }
//    //    });
//    }

    private void crearTablaInfo( String user ) {
                List< Usuario > temp =  controlador.getContactos(user) ;
                 matriz = new Object[temp.size()][2];
                for( int i = 0 ; i  < temp.size() ; ++i )
                {
                    matriz[ i ][ 0 ] = temp.get( i ).getNickName();
                    System.out.println( temp.get( i ).getNickName() );
                    matriz[ i ][ 1 ] = temp.get( i ).getEmail();
                      System.out.println( temp.get( i ).getEmail() );

                }
                DefaultTableModel model = new DefaultTableModel( matriz , this.nombresContacts );
                this.jTable1.setModel( model );
                repaint();
	}
    
    private void other( String user)
    {
        GrupoJpaController controladorGrupo = new GrupoJpaController(emf);
        MiembroJpaController controladorMiembro = new MiembroJpaController(emf);
        HistorialJpaController controladorHistorial = new HistorialJpaController(emf);

        this.jButton1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
                              int[] users = jTable1.getSelectedRows();
                              String name = jTextField1.getText();
                              String estado = "activo";
                              short idMiembro = (short)controladorMiembro.getMaxId();
                              short idGrupo = (short)controladorGrupo.getMaxId();
                              idGrupo++;
                              Grupo grupo = new Grupo( idGrupo );
                              grupo.setEstado(estado);
                              grupo.setNombre(name);
                              short tipo = 0;
                            try {
                                controladorGrupo.create(grupo);
                                System.out.println("se creo el grupo "+ name);
                            } catch (Exception ex) {
                                Logger.getLogger(CrearGrupo.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            for( int i = 0 ; i < users.length ; ++i )
                            {
                               idMiembro++;
                                Miembro miembro = new Miembro( idMiembro  );
                                miembro.setMonto(BigInteger.ZERO);
                                miembro.setUsuarioNickName( new Usuario((String)matriz[ i ][ 0 ]) );
                                  try {
                                      controladorMiembro.create(miembro);
                                       System.out.println("se creo el miembro "+ idMiembro);

                                  } catch (Exception ex) {
                                      Logger.getLogger(CrearGrupo.class.getName()).log(Level.SEVERE, null, ex);
                                  }
                                  GregorianCalendar gc = new GregorianCalendar();
                                 
                                  try {
                                      controladorHistorial.create( new Historial(gc.getTime(),idMiembro,idGrupo,tipo) ) ;
                                                                      System.out.println("se creo el Historial "+ idMiembro + " " + idGrupo +" "+tipo);

                                  } catch (Exception ex) {
                                      Logger.getLogger(CrearGrupo.class.getName()).log(Level.SEVERE, null, ex);
                                  }

                            }
                            tipo = 1;
                            idMiembro++;
                                Miembro miembro = new Miembro( idMiembro  );
                                miembro.setMonto(BigInteger.ZERO);
                                miembro.setUsuarioNickName( new Usuario(user) );
                                  try {
                                      controladorMiembro.create(miembro);
                                       System.out.println("se creo el miembro "+ idMiembro);

                                  } catch (Exception ex) {
                                      Logger.getLogger(CrearGrupo.class.getName()).log(Level.SEVERE, null, ex);
                                  }
                                  GregorianCalendar gc = new GregorianCalendar();
                                 
                                  try {
                                      controladorHistorial.create( new Historial(gc.getTime(),idMiembro,idGrupo,tipo) ) ;
                                        System.out.println("se creo el Historial "+ idMiembro + " " + idGrupo +" "+tipo);

                                  } catch (Exception ex) {
                                      Logger.getLogger(CrearGrupo.class.getName()).log(Level.SEVERE, null, ex);
                                  }
                             
                        }
		});
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
